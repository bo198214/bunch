z_type L=z_type(0.3181315052047641353,1.337235701430689409);
z_type Zo=z_type(.31813150520476413, 1.3372357014306895);
z_type Zc=z_type(.31813150520476413,-1.3372357014306895);

z_type slo(z_type z1){ int K=70,k;
DB DE[70]={
 1.4192252155045112363
,-0.05213258059504092407
, 0.00693219127231864234
,-0.00015617045803078316
,-0.00100912103192078782
, 0.00082172671942120398
,-0.00035776641706486737
,-0.00000931803078019697
, 0.00016678111347465021
,-0.00014181446429618086
, 0.00003186488716755594
, 0.00006022937593381517
,-0.00007769822425912066
, 0.00002881816918619135
, 0.00003346765900822668
,-0.00005635940063411782
, 0.00002613708925016667
, 0.00002533340993841060
,-0.00005010441077383243
, 0.00002593810315633105
, 0.00002404611619444275
,-0.00005163237960847944
, 0.00002794639200827120
, 0.00002700738578074180
,-0.00005939034671786914
, 0.00003210957302517415
, 0.00003438228340506555
,-0.00007428277031387155
, 0.00003866307577808925
, 0.00004803792230205773
,-0.00009914144632716670
, 0.00004800048689901359
, 0.00007191929511805029
,-0.00013922509975259346
, 0.00006043144910563569
, 0.00011338162955780718
,-0.00020351143809875795
, 0.00007563090935036598
, 0.00018585582083687768
,-0.00030700865499966312
, 0.00009132323375524721
, 0.00031386601331178098
,-0.00047465105599258094
, 0.00010029852564912290
, 0.00054234084236668421
,-0.00074756113899638883
, 0.00008362368535017595
, 0.00095394722593482588
,-0.00119330504094250500
,-0.00000366817694157362
, 0.00170108762104064230
,-0.00192001034738495955
,-0.00026418108027428391
, 0.00306540578603744498
,-0.00310172797180712249
,-0.00091973869130015375
, 0.00556623982265591621
,-0.00499720778316259384
,-0.00246745571494102469
, 0.01017293855547904934
,-0.00801256000995636056
,-0.00589130222797393851
, 0.01861927509307861536
,-0.01257792115211486816
,-0.01346037089824676618
, 0.03445315957069396834
,-0.01951284408569336007
,-0.02894475460052490373
, 0.06359682083129883368
,-0.02902193069458007882
};
//#include "s09.cin"
z_type z=z1-1.;  z/=2.;
z_type s=0.; //z_type t=1; 
for(k=K-1;k>0;k--){ s+=DE[k]; s*=z; }
s+=DE[0];
s+=log(z1-Zo)/Zo+log(z1-Zc)/Zc;
return s;
}

z_type FSLOG(z_type z1){ DB x=Re(z1),  y=Im(z1);
if(fabs(y)>fabs(Im(Zo)) ) return FSLOG(log(z1))+1.;
if(x	  <     Re(Zo)  ) return FSLOG(exp(z1))-1.;
if(x>2) return FSLOG(log(z1))+1.;

z_type z=z1-1.;
z_type LZ=log(z1); if( abs(LZ-1.)<   abs(z) ) return FSLOG(LZ)+1.;
//z_type EZ=exp(z1); if( abs(EZ-1.)<.1*abs(z) ) return FSLOG(EZ)-1.;
return slo(z1);
}
